<%-include('../layouts/header.ejs')%>
<%-include('../layouts/navbar.ejs')%>


<style>
    /* Add this CSS to give a black border to the content containers */
.content-container {
    border: 2px solid black;
    padding: 20px;
    margin-bottom: 20px;
}
/* Add thicker and bold bottom border after each product row */
.table-cart tbody tr {
    border-bottom: 2px solid black;
}
.product-title{
	text-align: center;
}

</style>

<main class="main">
        	<div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.png')">
        		<div class="container-fluid">
        			<h1 class="page-title" style="color: white;"> Cart</h1>
        		</div><!-- End .container -->
        	</div><!-- End .page-header -->
            <nav aria-label="breadcrumb" class="breadcrumb-nav">
                <div class="container">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                        <li class="breadcrumb-item"><a href="#">Shop</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Shopping Cart</li>
                    </ol>
                </div><!-- End .container -->
            </nav><!-- End .breadcrumb-nav -->
						
            <div class="page-content">
            	<div class="cart">
	                <div class="container-fluid">
	                	<div class="row">
	                		<div class="col-lg-9 content-container">
	                			<table class="table table-cart table-mobile">
									<thead >
										<tr style="color: black; font-weight: bold;">
											<th style="font-weight: bold; color: black">Product</th>
                                            <th style="font-weight: bold; color: black">Price</th>
                                            <th style="font-weight: bold; color: black">Quantity</th>
                                            <th style="font-weight: bold; color: black">Total</th>
                                            <th style="font-weight: bold; color: black"></th>

										</tr>
									</thead>
									<% let finalPrice = 0 %>
									<tbody> 
										
										
									<% if (cartData && cartData.length > 0) { %>  
											
										<% cartData.forEach(gameItem => { %>
												<%= console.log(gameItem) %>
												<tr>
													<td class="product-col col-lg-4">
														<div class="product">
															<a href="#"> 
																<img src="<%=gameItem.mainImage.path%>" alt="<%= gameItem.name %>" style="width: 100px; border: 2px ; height: 100px; margin-right: 30px; margin-left: 30px; color: black;">>
															</a>	
																													
															<h3 class="product-title  ">
																<a href="#" class="text-center"><%= gameItem.name %></a>
															</h3>
															
														</div>
													</td>
													<td class="price-col"><%= gameItem.gameId.finalPrice ? gameItem.gameId.finalPrice : gameItem.price %></td>

													<td class="quantity-col">
														<div class="cart-product-quantity">
															<input 
															type="number" 
															class="form-control quantity-input" 
															value="<%= gameItem.quantity %>" 
															min="1" 
															max='<%= gameItem.gameId.stock  %>' 
															step="1" data-decimals="0" 
															required
															id="<%= gameItem.gameId._id %>"
															data-cartid="<%= cartId %>">
														</div>

													</td>
													
                                                    <td class="total-col" id="totalAmount-<%= gameItem.gameId._id %>" style="color: black; font-weight: bold;">
                                                        <% if (gameItem.quantity === 0) { %>
                                                            0
                                                        <% } else { %>
                                                            <%= gameItem.gameId.finalPrice ? gameItem.gameId.finalPrice * gameItem.quantity : gameItem.price * gameItem.quantity %>
                                                            <% finalPrice += gameItem.gameId.finalPrice ? gameItem.gameId.finalPrice * gameItem.quantity : gameItem.price * gameItem.quantity %>
                                                        <% } %>
                                                    </td>
														
													
													<td class="remove-col">
														<button class="btn-remove" onclick="confirmDelete('<%= gameItem.name %>' , '<%= gameItem.gameId._id %> ')">
															<i class="icon-close"></i>
														</button>
													</td>
													
													
													
												</tr>
												
											
										<%	}) %>
										<% } else { %>
											<tr>
												<td colspan="5">Your cart is empty.</td>
											</tr>
										<% } %>
												
										
									</tbody>
								</table>
								<% if (errmsg) { %>
									<h6 style="text-align: center; color: red;"><%= errmsg %></h6>
								<% } %>

	                			
	                		</div><!-- End .col-lg-9 -->
	                		<aside class="col-lg-2.9 ml-5  content-container">
	                			<div class="summary summary-cart">
	                				<h3 class="summary-title">Cart Total</h3><!-- End .summary-title -->

	                				<table class="table table-summary">
	                					<tbody>
	                						<tr class="summary-subtotal">
	                							<td>Price:</td>
	                							<td id="totalCartPrice"><%= totalCartPrice %> Rs</td>
	                						</tr><!-- End .summary-subtotal -->
	                						<tr class="summary-shipping">
	                							<td>Delivery:</td>
	                							<td>&nbsp;</td>
	                						</tr>

	                						

	                						

	                						<tr class="summary-shipping-estimate">
	                							<td>Estimate for Your Country<br> <a href="dashboard.html">Change address</a></td>
	                							<td>&nbsp;</td>
	                						</tr><!-- End .summary-shipping-estimate -->

	                						<tr class="summary-total">
	                							<td>Total:</td>
	                							<td id="cartTotal"><%= totalCartPrice %> Rs</td>
	                						</tr><!-- End .summary-total -->
	                					</tbody>
	                				</table><!-- End .table table-summary -->

	                				<a href="#" id="proceedToCheckout" class="btn btn-outline-dark btn-order btn-block" style="border-width: 2px; font-weight: bold;">PROCEED TO CHECKOUT</a>
	                			</div><!-- End .summary -->

		            			<a href="/allGames" class="btn btn-outline-dark btn-block mb-3" style="border-width: 2px; font-weight: bold;"><span>CONTINUE SHOPPING</span><i class="icon-refresh"></i></a>
	                		</aside>
	                	</div><!-- End .row -->
	                </div><!-- End .container -->
                </div><!-- End .cart -->
            </div><!-- End .page-content -->
</main><!-- End .main -->




<!--  Ask for confirmation for deleting  using SweetAlert -->
<script>
	function confirmDelete(gameName , gameId){
    Swal.fire({
        title: "Are you sure?",
        text: `You Sure you want to remove ${gameName} from cart ? `,
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, delete it!",
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/removeFromCart?gameName=${gameName}&gameId=${gameId}`, { method: 'PUT' })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: "Cart Deleted",
                            text: "Cart Deleted Successfully",
                            icon: "success"
                        }).then(() => {
                            window.location.reload();
                        });
                        $('#main-id').load('/cart #main-id');
                    } else {
                        Swal.fire({
                            title: "Error",
                            text: "An error occurred while deleting the cart.",
                            icon: "error"
                        }).then(() => {
                            window.location.reload();
                        });
						
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: "Error",
                        text: "An error occurred while processing your request.",
                        icon: "error"
                    });
                });
        }
    });
}
</script>


<!-- fucntion to  increase the amount when quantity changes -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.quantity-input').forEach(input => {
        input.addEventListener('change', async function() {
            const gameId = this.id;
            const newQuantity = parseInt(this.value, 10);
            const cartId = this.getAttribute('data-cartid');

            try {
                const response = await fetch(`/update-cart/`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ quantity: newQuantity, gameId: gameId, cartId: cartId })
                });

                if (!response.ok) {
                    throw new Error('Failed to update cart');
                }

                const responseData = await response.json();
                const { updatedTotalAmount, updatedTotalCartPrice } = responseData;

                const totalAmountElem = document.getElementById(`totalAmount-${gameId}`);
                if (totalAmountElem) {
                    totalAmountElem.innerText = updatedTotalAmount.toFixed(2);
                }

                const totalCartPriceElem = document.getElementById('totalCartPrice');
                if (totalCartPriceElem) {
                    totalCartPriceElem.innerText = updatedTotalCartPrice.toFixed(2);
                }

                const finalPriceElem = document.getElementById('cartTotal');
                if (finalPriceElem) {
                    finalPriceElem.innerText = updatedTotalCartPrice.toFixed(2);
                }

                console.log('Updated Total Amount:', updatedTotalAmount);
                console.log('Updated Total Cart Price:', updatedTotalCartPrice);

                
            } catch (error) {
                console.error(error);
            }
        });
    });
});

</script>
	
	

<!-- checking zero quantity games is there or not  -->
<script>
    document.getElementById('proceedToCheckout').addEventListener('click',function(event){
        event.preventDefault();

        const cartData = <%- JSON.stringify(cartData) %>

        console.log('snfsdf'+cartData);

        const zeroGame = cartData.filter(item => item.quantity ===0)

        if(zeroGame && zeroGame.length > 0){
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Some games in your cart have no Stock . Remove it for Further Actions '
            });
        } else {
            window.location.href = '/checkOut';
        }
    })
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<%-include('../layouts/footbar.ejs')%>
<%-include('../layouts/footer.ejs')%>   